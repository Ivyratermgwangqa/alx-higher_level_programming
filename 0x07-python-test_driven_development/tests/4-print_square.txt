======================
4-print_square
======================

Print Square Module Unit Tests

Test cases to verify the behavior of the print_square function.

It should print a square made of '#' characters with the specified size.

::

    >>> print_square = __import__('4-print_square').print_square
    >>> print_square(4)
    ####
    ####
    ####
    ####

It should work with a larger square, such as size 10.

::

    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

It should work with a square of size 0, but it prints nothing.

::

    >>> print_square(0)

It should work with a square of size 1.

::

    >>> print_square(1)
    #

It should raise a TypeError if the size is None.

::

    >>> print_square(None)
    Traceback (most recent call last):
    TypeError: size must be an integer

It should raise a ValueError if a negative number is provided as the size.

::

    >>> print_square(-10)
    Traceback (most recent call last):
    ValueError: size must be >= 0

It should raise a ValueError if a negative float is provided as the size.

::

    >>> print_square(-10.5)
    Traceback (most recent call last):
    TypeError: size must be an integer

It should raise a TypeError if a string is provided as the size parameter.

::

    >>> print_square("hello")
    Traceback (most recent call last):
    TypeError: size must be an integer

It should raise a TypeError if no value is provided for the size parameter.

::

    >>> print_square()
    Traceback (most recent call last):
    TypeError: print_square() missing 1 required positional argument: 'size'

::
